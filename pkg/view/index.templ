package view

import (
    "strconv"

	"github.com/TKSpectro/go-todo-api/pkg/app/model"
)

type BaseData struct {
    IsAuthenticated bool
    Account         *model.Account
}

templ layout(data BaseData) {
    <!DOCTYPE html>
    <html lang="en">
        <head>
            <title></title>
            <meta charset="UTF-8" />
            <meta name="viewport" content="width=device-width, initial-scale=1" />
            <script
                src="https://unpkg.com/htmx.org@1.9.4"
                integrity="sha384-zUfuhFKKZCbHTY6aRR46gxiqszMk5tcHjsVFxnUo8VMus4kHGVdIYVbOYYNlKmHV"
                crossorigin="anonymous"
            ></script>
            <script src="https://cdn.tailwindcss.com"></script>
            <script src="/js/main.js"></script>
        </head>
        <body>
            @navigation(data)
            { children... }
        </body>
    </html>
}

templ navigation(data BaseData){
    <nav class="bg-gray-800">
        <div class="mx-auto px-8">
            <div class="relative flex h-16 items-center justify-between">
                <div class="flex flex-1 items-stretch justify-start space-x-4">
                    <a
                        href="/"
                        class="bg-gray-900 text-white rounded-md px-3 py-2 text-sm font-medium"
                        aria-current="page"
                        >Home</a>
                    if data.IsAuthenticated {
                        <a
                            href="/todos"
                            class="text-gray-300 hover:bg-gray-700 hover:text-white rounded-md px-3 py-2 text-sm font-medium"
                            >Todos</a>
                    }
                </div>
                <div class="inset-y-0 right-0 items-center pr-2 flex space-x-4">
                    if data.IsAuthenticated {
                        <button
                            class="bg-gray-900 text-white rounded-md px-3 py-2 text-sm font-medium"
                            hx-post="/logout">
                            { data.Account.Email }
                        </button>
                    } else {
                        <a
                            href="/login"
                            class="bg-gray-900 text-white rounded-md px-3 py-2 text-sm font-medium"
                            aria-current="page"
                            >Login</a>
                    }
                </div>
            </div>
        </div>
    </nav>
}

templ IndexPage(data BaseData){
    @layout(data){
        <div class="flex items-center justify-center my-4">
            <div class="text-7xl text-center">go-todo-api</div>
        </div>
    }
}

templ LoginPage(data BaseData){
    @layout(data){
        <div class="flex min-h-full flex-col justify-center px-6 py-12 lg:px-8">
            <div class="sm:mx-auto sm:w-full sm:max-w-sm">
                <h2
                    class="mt-10 text-center text-2xl font-bold leading-9 tracking-tight text-gray-900"
                >
                    Sign in to your account
                </h2>
            </div>

            <div class="mt-10 sm:mx-auto sm:w-full sm:max-w-sm">
                <form class="space-y-6" hx-post="/login">
                    <div>
                        <label
                            for="email"
                            class="block text-sm font-medium leading-6 text-gray-900"
                            >Email address</label>
                        <div class="mt-2">
                            <input
                                id="email"
                                name="email"
                                type="email"
                                autocomplete="email"
                                required
                                class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6"
                            />
                        </div>
                    </div>

                    <div>
                        <div class="flex items-center justify-between">
                            <label
                                for="password"
                                class="block text-sm font-medium leading-6 text-gray-900"
                                >Password</label>
                            <!-- <div class="text-sm">
                                <a
                                    href="forgot-password"
                                    class="font-semibold text-indigo-600 hover:text-indigo-500"
                                    >Forgot password?</a
                                >
                            </div> -->
                        </div>
                        <div class="mt-2">
                            <input
                                id="password"
                                name="password"
                                type="password"
                                autocomplete="current-password"
                                required
                                class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6"
                            />
                        </div>
                    </div>

                    <div>
                        <button
                            type="submit"
                            class="flex w-full justify-center rounded-md bg-indigo-600 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600"
                        >
                            Sign in
                        </button>
                    </div>
                </form>

                <p class="mt-10 text-center text-sm text-gray-500">
                    No account?
                    <a
                        href="/register"
                        class="font-semibold leading-6 text-indigo-600 hover:text-indigo-500"
                        >Register now</a>
                </p>
            </div>
        </div>
    }
}

templ TodosIndexPage(data BaseData, todos []model.Todo){
    @layout(data){
        <div>
            <form hx-post="/todos" hx-swap="afterbegin" hx-target="#todo-list">
                <label for="title">Create a new todo:</label>
                <input type="text" name="title" class="border" required />
                <button type="submit">+</button>
            </form>
        </div>

        <div>
            <ul id="filters" class="flex space-x-2 my-4 ml-2">
                <a href="/todos"
                    ><li class="py-2 px-4 border rounded hover:bg-gray-200">All</li></a>

                <a href="/todos?filter[completed]=0">
                    <li class="py-2 px-4 border rounded hover:bg-gray-200">Active</li>
                </a>

                <a href="/todos?filter[completed]=1">
                    <li class="py-2 px-4 border rounded hover:bg-gray-200">
                        Completed
                    </li>
                </a>
            </ul>
        </div>

        <div id="todo-list" class="container">@todoList(todos)</div>
    }
}

templ todoList(todos []model.Todo){
    for _, todo := range todos {
        @TodoItem(todo)
    }
}

templ TodoItem(todo model.Todo){
    <div class="todo border-gray-900 border my-2 rounded-lg">
        <div class="id">{ strconv.FormatUint(uint64(todo.ID), 10) }</div>
        <div class="title">{ todo.Title.String }</div>
        @TodoCompleteToggle(todo)
        <button
            hx-delete={"/todos/"+strconv.FormatUint(uint64(todo.ID), 10)}
            hx-confirm="Are you sure?"
            hx-target="closest .todo"
            hx-swap="outerHTML"
        >
            Delete
        </button>
    </div>
}

templ TodoCompleteToggle(todo model.Todo){
    <input
        type="checkbox"
        hx-put={"/todos/"+strconv.FormatUint(uint64(todo.ID), 10)+"/complete"}
        hx-swap="outerHTML"
        checked?={ todo.Completed }
    />
}