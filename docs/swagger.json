{
    "swagger": "2.0",
    "info": {
        "title": "fiber-api",
        "contact": {},
        "version": "1.0"
    },
    "basePath": "/api",
    "paths": {
        "/accounts": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "List accounts",
                "parameters": [
                    {
                        "type": "string",
                        "example": "[amount][gte]=5 or [fk_id]=5. This can be given multiple times",
                        "name": "filters",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "default": 10,
                        "example": 10,
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "id asc",
                        "example": "id asc",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "default": 1,
                        "example": 1,
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "test@test.com",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Account"
                            }
                        }
                    }
                }
            }
        },
        "/accounts/{id}": {
            "get": {
                "description": "get string by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Get account",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Account"
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "Account",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.LoginDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.AuthResponse"
                        }
                    }
                }
            }
        },
        "/auth/refresh": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Refresh",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.AuthResponse"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Register",
                "parameters": [
                    {
                        "description": "Account",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.RegisterDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.AuthResponse"
                        }
                    }
                }
            }
        },
        "/todos": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "todos"
                ],
                "summary": "List todos",
                "parameters": [
                    {
                        "type": "string",
                        "example": "[amount][gte]=5 or [fk_id]=5. This can be given multiple times",
                        "name": "filters",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "default": 10,
                        "example": 10,
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "id asc",
                        "example": "id asc",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "default": 1,
                        "example": 1,
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "test@test.com",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.GetTodosResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create todo",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "todos"
                ],
                "summary": "Create todo",
                "parameters": [
                    {
                        "description": "Todo",
                        "name": "todo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.CreateTodoRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.CreateTodoResponse"
                        }
                    }
                }
            }
        },
        "/todos/{id}": {
            "get": {
                "description": "get string by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "todos"
                ],
                "summary": "Get todo",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Todo ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.GetTodoResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update todo",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "todos"
                ],
                "summary": "Update todo",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Todo ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Todo",
                        "name": "todo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.UpdateTodoRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.UpdateTodoResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete todo",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "todos"
                ],
                "summary": "Delete todo",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Todo ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Account": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "firstname": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "lastname": {
                    "type": "string"
                },
                "todos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Todo"
                    }
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.Todo": {
            "type": "object",
            "required": [
                "title"
            ],
            "properties": {
                "completed": {
                    "type": "boolean"
                },
                "completedAt": {
                    "type": "string",
                    "format": "date-time"
                },
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "fkAccountId": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string",
                    "minLength": 1
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "pagination.Meta": {
            "type": "object",
            "properties": {
                "hasNextPage": {
                    "type": "boolean"
                },
                "hasPrevPage": {
                    "type": "boolean"
                },
                "limit": {
                    "type": "integer"
                },
                "nextPage": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "prevPage": {
                    "type": "integer"
                },
                "skip": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                },
                "totalPages": {
                    "type": "integer"
                }
            }
        },
        "types.AuthResponse": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/types.AuthResponseBody"
                }
            }
        },
        "types.AuthResponseBody": {
            "type": "object",
            "properties": {
                "refreshToken": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "types.CreateTodoRequest": {
            "type": "object",
            "properties": {
                "todo": {
                    "$ref": "#/definitions/models.Todo"
                }
            }
        },
        "types.CreateTodoResponse": {
            "type": "object",
            "properties": {
                "todo": {
                    "$ref": "#/definitions/models.Todo"
                }
            }
        },
        "types.GetTodoResponse": {
            "type": "object",
            "properties": {
                "todo": {
                    "$ref": "#/definitions/models.Todo"
                }
            }
        },
        "types.GetTodosResponse": {
            "type": "object",
            "properties": {
                "_meta": {
                    "$ref": "#/definitions/pagination.Meta"
                },
                "todos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Todo"
                    }
                }
            }
        },
        "types.LoginDTO": {
            "type": "object",
            "properties": {
                "account": {
                    "$ref": "#/definitions/types.LoginDTOBody"
                }
            }
        },
        "types.LoginDTOBody": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 6
                }
            }
        },
        "types.RegisterDTO": {
            "type": "object",
            "properties": {
                "account": {
                    "$ref": "#/definitions/types.RegisterDTOBody"
                }
            }
        },
        "types.RegisterDTOBody": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "firstname": {
                    "type": "string",
                    "minLength": 2
                },
                "lastname": {
                    "type": "string",
                    "minLength": 2
                },
                "password": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 6
                }
            }
        },
        "types.UpdateTodoRequest": {
            "type": "object",
            "properties": {
                "todo": {
                    "$ref": "#/definitions/models.Todo"
                }
            }
        },
        "types.UpdateTodoResponse": {
            "type": "object",
            "properties": {
                "todo": {
                    "$ref": "#/definitions/models.Todo"
                }
            }
        }
    }
}